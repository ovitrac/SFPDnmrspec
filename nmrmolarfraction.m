function [R,indratio,Crelative] = nmrmolarfraction(C,indmol,P,varargin)
%NMRMOLARFRACTION converts deconvolution solutions (proportion of proton) (matrix C generated by NMRLSQNONNEG) into pair molar fractions
% SYNTAXE R = nmrmolarfraction(C,indmol)
% INPUTS
%           C: n x 1 cell of array containing concentration (or proportion) (results of deconvolution) calculated by NMRLSQNONNEG
%      indmol: n x 1 cell of array containing combinations of index of molecules, calculated by NMRLSQNONNEG
%           P: n x 1 array, number of proton of susbtances ordered in rang of insertion of substances
% OUTPUTS
%           R: n x 1 cell of pair molar fractions (Ri = xi/xi+1 = (Ci*Pi+1)/(Ci+1*Pi))
%              structure is almost identical to C with lenght of each branch is 1 unit less
%    indratio: n x 1 cell of pair susbtances corresponding to pair molar fractions (i-i+1...)
%              has the same structure of R
%   Crelative: n x 1 cell containing relative weights (relative deconvolution solutions)
%              if C of inputs hase been already normalized, Crelative is equal to C 
%   

% See also: nmrlsqnonneg, createcombination
%
% RMNSPEC v 0.1 - 09/12/2013 - INRA\Olivier Vitrac, LNE\Mai Nguyen - rev. 
% history
%
% argcheck
% o = argcheck(varargin);
if nargin < 3, error('3 arguments are required'), end
if size(C,1) ~= size(indmol,1), error('C and indmol must have the same size (in row)'), end
if ~isequal(cell2mat(arrayfun(@(i) size(indmol{(i)}),1:size(indmol,1),'uniformoutput',false)'),cell2mat(arrayfun(@(i) size(indmol{(i)}),1:size(indmol,1),'uniformoutput',false)'))
    error('Size of internal elements of C and indmol are not consistent')
end
if  ~isempty(P), P = P(:); end
if size(P,1) ~= size(C,1), error('Size of P array and C must be equal (in row)'), end

% normalisation of C (convert into fractions of proton Ci/sum(Ci))
Crelative = cell(size(C,1),1);
for i = 1:size(C,1)
    Ctmp = zeros(i,size(indmol{i},2));
    for j = 1:size(indmol{i},2)
        for k = 1:i
            Ctmp(k,j) = C{i}(k,j)/sum(C{i}(:,j));    
        end
    end
    Crelative{i} = Ctmp;
end

% Pair molar fractions
R = cell(size(C,1),1);
indratio = cell(size(C,1),1);
for i = 1:size(C,1)
    if i==1, 
        R{i} = Crelative{i};
        indratio{i} = sprintf('%d-%d',indmol{i},indmol{i});
    else
        Rtmp = zeros(i-1,size(indmol{i},2));
        indtmp = cell(i-1,size(indmol{i},2));
            for j = 1:size(indmol{i},2)
                itmp = indmol{i}(:,j);
                Ptmp = P(itmp);
                Ctmp = Crelative{i}(:,j);
                Rtmp(:,j) = Ctmp(1:end-1).*Ptmp(2:end)./(Ptmp(1:end-1).*Ctmp(2:end));
                Rtmp(Rtmp(:,j)==Inf,j) = 0; Rtmp(isnan(Rtmp(:,j)),j) = 0;
                for k = 1:i-1
                    tmp = arrayfun(@(m) sprintf('%d-%d',itmp((m)),itmp((m)+1)),1:i-1,'UniformOutput',false)';
                    indtmp{k,j} = tmp{k};
                end
            end
        R{i} = Rtmp;
        indratio{i} = indtmp;
    end
end
